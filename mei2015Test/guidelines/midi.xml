<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  © 2014 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://www.osedu.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->

<div xmlns="http://www.tei-c.org/ns/1.0" type="div1" xml:id="midiGuidelines" n="0">
  <head>MIDI</head>
  <p>This chapter describes the MIDI encoding functionality present in MEI. The purpose of this
    module is to allow for integrating MIDI data into MEI-encoded notation, to both aid software in
    translating MEI to MIDI, and to permit the capture of information in existing MIDI files. The
    MIDI model in MEI is similar to that of Mup, and the user is directed to the <ref
      target="http://www.arkkra.com/doc/uguide.ps">Mup User Guide</ref> for additional
    information.</p>
  <p>The MIDI module defines certain generally-accepted MIDI units that may be used outside of a
    MIDI context. For example, the <att>dur.ges</att> attribute accepts MIDI <abbr>ppq</abbr>
    (Pulses Per Quarter) as a valid measurement of duration. Similarly, the <att>pnum</att>
    attribute allows MIDI note numbers for specifying a pitch value.</p>
  <div type="div2" xml:id="midi.scoreDefppq">
    <head>PPQ in scoreDef and staffDef</head>
    <p>To define the MIDI resolution of a score, the <att>ppq</att> attribute may be used on the <gi
        scheme="MEI">scoreDef</gi> element. This value can be used to interpret the values found in
      the <att>dur.ges</att> attribute on elements in the <ident type="class"
        >att.duration.performed</ident> class.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
<scoreDef meter.count="4" meter.unit="4" meter.sym="common" key.sig="1f" ppq="48">
  <staffGrp>
    <staffDef n="1" xml:id="midi.P1" lines="5" clef.line="2" clef.shape="G" key.sig="1f"/>
    <staffDef n="2" xml:id="midi.P2" lines="5" clef.line="4" clef.shape="F" key.sig="1f"/>
    <staffDef n="3" xml:id="midi.P3" lines="5" clef.line="4" clef.shape="F" key.sig="1f"/>
  </staffGrp>
</scoreDef>
<!-- snip -->
<note xml:id="midi.d1e40" pname="a" oct="5" dur="8" dur.ges="24p" stem.dir="up"/><!-- 8th note -->
<rest xml:id="midi.d1e58" dur="32" dur.ges="6p" vo="4"/><!-- 32nd note -->
<!-- snip -->
    </egXML>
    <p>The <att>ppq</att> attribute is also available on the <gi scheme="MEI">staffDef</gi> element
      in order to aid in the conversion to MEI from other representations that allow a different
      time base for each staff. However, these independent values for <att>ppq</att> are only
      interpretable in terms of a common time base. Therefore, the <att>ppq</att> attribute is
      required on <gi scheme="MEI">scoreDef</gi> when the values of <att>ppq</att> on the staff
      definitions differ. In the following example, the values of the <att>ppq</att> attributes on
      the <gi scheme="MEI">staffDef</gi> elements are all factors of the value of <att>ppq</att>
      attached to <gi scheme="MEI">scoreDef</gi>. <!-- TODO: Add a schematron rule? --></p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
<scoreDef meter.count="4" meter.unit="4" meter.sym="common" key.sig="1f" ppq="48">
  <staffGrp>
    <staffDef n="1" xml:id="midi.P1" lines="5" clef.line="2" clef.shape="G" key.sig="1f" ppq="2"/>
    <staffDef n="2" xml:id="midi.P2" lines="5" clef.line="4" clef.shape="F" key.sig="1f" ppq="16"/>
    <staffDef n="3" xml:id="midi.P3" lines="5" clef.line="4" clef.shape="F" key.sig="1f" ppq="24"/>
  </staffGrp>
</scoreDef>
    </egXML>
  </div>
  <div type="div2" xml:id="midiInstruments">
    <head>Recording General MIDI Instrumentation</head>
    <p>The <gi scheme="MEI">instrDef</gi> element can be used to record MIDI instrument names or
      numbers using the <att>midi.instrname</att> and <att>midi.instrnum</att> attributes. The
        <att>midi.instrname</att> attribute must contain an instrument name from the list provided
      by the data.MIDINAMES data type. By default, data.MIDINAMES contains General MIDI Instrument
      designations.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
<scoreDef meter.count="4" meter.unit="4" meter.sym="common" key.sig="1f" ppq="48">
  <staffGrp>
    <staffDef n="1" xml:id="midi.P5" lines="5" clef.line="2" clef.shape="G">
      <instrDef midi.instrname="Violin"/>
    </staffDef>
    <staffDef n="2" xml:id="midi.P6" lines="5" clef.line="2" clef.shape="G">
      <instrDef midi.instrname="Violin"/>
    </staffDef>
    <staffDef n="3" xml:id="midi.P7" lines="5" clef.line="3" clef.shape="C">
      <instrDef midi.instrname="Viola"/>
    </staffDef>
    <staffDef n="3" xml:id="midi.P8" lines="5" clef.line="4" clef.shape="F">
      <instrDef midi.instrname="Cello"/>
    </staffDef>
  </staffGrp>
</scoreDef>
    </egXML>
    <p>The <att>midi.instrnum</att> is provided for those cases when an instrument number is needed
      instead of, or in addition to, an instrument name. It must contain valid MIDI values; that is,
      0-127.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
<scoreDef meter.count="4" meter.unit="4" meter.sym="common" key.sig="1f" ppq="48">
  <staffGrp>
    <staffDef n="1" xml:id="midi.P5" lines="5" clef.line="2" clef.shape="G">
      <instrDef midi.instrnum="41"/>
    </staffDef>
    <staffDef n="2" xml:id="midi.P6" lines="5" clef.line="2" clef.shape="G">
      <instrDef midi.instrnum="41"/>
    </staffDef>
    <staffDef n="3" xml:id="midi.P7" lines="5" clef.line="3" clef.shape="C">
      <instrDef midi.instrnum="42"/>
    </staffDef>
    <staffDef n="3" xml:id="midi.P8" lines="5" clef.line="4" clef.shape="F">
      <instrDef midi.instrnum="43"/>
    </staffDef>
  </staffGrp>
</scoreDef>
    </egXML>
  </div>
  <div type="div2" xml:id="midiData">
    <head>Recording MIDI Event Data</head>
    <p>MIDI messages are encapsulated in the <gi scheme="MEI">midi</gi> element, which is typically
      used in contexts like <gi scheme="MEI">layer</gi> and <gi scheme="MEI">measure</gi>. The
      following elements are provided for the capture of MIDI data:</p>
    <p>
      <specList>
        <specDesc key="cc"/>
        <specDesc key="chan"/>
        <specDesc key="chanPr"/>
        <specDesc key="cue"/>
        <specDesc key="hex"/>
        <specDesc key="marker"/>
        <specDesc key="metaText"/>
        <specDesc key="noteOff"/>
        <specDesc key="noteOn"/>
        <specDesc key="port"/>
        <specDesc key="prog"/>
        <specDesc key="seqNum"/>
        <specDesc key="trkName"/>
        <specDesc key="vel"/>
      </specList>
    </p>
    <p>The <gi scheme="MEI">noteOn</gi> and <gi scheme="MEI">noteOff</gi> elements allow the capture
      of MIDI information that does not necessarily agree with that encoded elsewhere, for example
      by <gi scheme="MEI">note</gi> elements. One case where this could be useful is when a single
      written note, modified by an ornament, should result in performance of multiple notes. The
      presence of <gi scheme="MEI">noteOn</gi> and <gi scheme="MEI">noteOff</gi> make it possible to
      encode the aural rendition of the notation. Another use case is when the MIDI data is
      "imported" from an existing file. Of course, how one handles conflicts between this kind of
      data and that encoded with individual notes is project- and processor-dependent.</p>
    <p>As do many of these elements, <gi scheme="MEI">vel</gi> affects all the following events on
      the port, channel, and track to which it is assigned. When MIDI output will be generated from
      the notation, the use of <att>vel</att> on each <gi scheme="MEI">note</gi> may be preferred.
      Other attributes on <gi scheme="MEI">note</gi> can also be used for this purpose. For example,
      MIDI duration can be recorded using the <att>dur.ges</att> attribute and MIDI pitch
      information can be recorded using the <att>pnum</att> attribute.</p>
    <p>MIDI control changes (<gi scheme="MEI">cc</gi>) are encoded using the <att>num</att> and
        <att>val</att> attributes. Control change numbers are specified in the General MIDI
      documentation. In the example below, the <gi scheme="MEI">cc</gi> elements encode increasing
      controller event 7 (volume) values, or in musical terms, a crescendo. Other MIDI event
      messages follow this same pattern, using the <att>num</att> and <att>val</att> attributes to
      record the raw MIDI data.</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve" valid="false">
<measure>
  <staff n="1">
    <layer>
      <note pnum="45" dur.ges="8p"/>
      <note pnum="42" dur.ges="8p"/>
      <note pnum="43" dur.ges="8p"/>
      <note pnum="44" dur.ges="8p"/>
    </layer>
  </staff>
  <midi staff="1" layer="1">
    <cc num="7" val="50" tstamp="1"/>
    <cc num="7" val="55" tstamp="1.5"/>
    <cc num="7" val="60" tstamp="2"/>
    <cc num="7" val="65" tstamp="2.5"/>
  </midi>
</measure>
    </egXML>
    <p>In the next example, a similar effect can be generated from the values recorded by an
        <att>vel</att> attribute on each note:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve" valid="false">
<measure>
  <staff n="1">
    <layer>
      <note pnum="45" dur.ges="8p" vel="50"/>
      <note pnum="42" dur.ges="8p" vel="55"/>
      <note pnum="43" dur.ges="8p" vel="60"/>
      <note pnum="44" dur.ges="8p" vel="65"/>
    </layer>
  </staff>
</measure>
    </egXML>
    <p>In the preceding example, each control change is associated with a measure-based time stamp.
      The <att>tstamp</att> attribute is required in order to indicate when the MIDI event should
      take place. It may be necessary to indicate a time stamp slightly earlier than the affected
      notes to compensate for MIDI delay in actual performance.</p>
    <!-- TODO:  add @tstamp to <midi> to allow for grouping simultaneous control changes? -->
  </div>
  <div type="div2" xml:id="midiNonCMN">
    <head>MIDI in Mensural and Neume Notation</head>
    <p>In mensural, neume, and other historical or non-Western repertoires, there is often no
      measure-based time stamp with which to associate MIDI controller data. Therefore, for these
      notations the <att>synch</att> attribute can be used to indicate temporal alignment of the
      MIDI event and the notational event:</p>
    <egXML xmlns="http://www.tei-c.org/ns/Examples" xml:space="preserve">
<staff>
  <layer>
    <note xml:id="midiNonCMN.n1" dur="fusa" dur.ges="8p" pnum="42"/>
    <note xml:id="midiNonCMN.n2" dur="fusa" dur.ges="8p" pnum="43"/>
    <note xml:id="midiNonCMN.n3" dur="fusa" dur.ges="8p" pnum="44"/>
    <note xml:id="midiNonCMN.n4" dur="fusa" dur.ges="8p" pnum="45"/>
    <midi>
      <cc num="7" val="50" synch="#midiNonCMN.n1"/>
      <cc num="7" val="55" synch="#midiNonCMN.n2"/>
      <cc num="7" val="60" synch="#midiNonCMN.n3"/>
      <cc num="7" val="65" synch="#midiNonCMN.n4"/>
    </midi>
  </layer>
</staff>
    </egXML>
  </div>

  <!--<div type="div2" xml:id="midiOverview">
    <!-\- Overview -\->
    <head>Overview of the MIDI Module</head>
    <p>The module described in this chapter makes available the following components:</p>
    <div type="div3" xml:id="midiElements">
      <head>Elements</head>
      <p>
        <specList>
          <specDesc key="cc"/>
          <specDesc key="chan"/>
          <specDesc key="chanPr"/>
          <specDesc key="cue"/>
          <specDesc key="instrGrp"/>
          <specDesc key="instrDef"/>
          <specDesc key="hex"/>
          <specDesc key="marker"/>
          <specDesc key="metaText"/>
          <specDesc key="midi"/>
          <specDesc key="noteOff"/>
          <specDesc key="noteOn"/>
          <specDesc key="port"/>
          <specDesc key="prog"/>
          <specDesc key="seqNum"/>
          <specDesc key="trkName"/>
          <specDesc key="vel"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="midiAttributeClasses">
      <head>Attribute Classes</head>
      <p>
        <specList>
          <specDesc key="att.channelized"/>
          <specDesc key="att.midi.anl"/>
          <specDesc key="att.midi.event"/>
          <specDesc key="att.midi.ges"/>
          <specDesc key="att.midi.log"/>
          <specDesc key="att.midi.vis"/>
          <specDesc key="att.midiinstrument"/>
          <specDesc key="att.midinumber"/>
          <specDesc key="att.miditempo"/>
          <specDesc key="att.midivalue"/>
          <specDesc key="att.timebase"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="midiModelClasses">
      <head>Model Classes</head>
      <p>
        <specList>
          <specDesc key="model.midiLike"/>
        </specList>
      </p>
    </div>
    <div type="div3" xml:id="midiDataTypes">
      <head>Data Types</head>
      <p>
        <specList>
          <specDesc key="data.MIDINAMES"/>
          <specDesc key="data.MIDITEMPO"/>
          <specDesc key="data.MIDICHANNEL"/>
          <specDesc key="data.MIDIVALUE"/>
        </specList>
      </p>
    </div>
  </div>-->

</div>
